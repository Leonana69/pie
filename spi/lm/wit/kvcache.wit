interface kvcache {
  // a single cached token
  resource token {
     position: func() -> u32;
     token-id: func() -> u32;
  }

  // a sequence of cached tokens
  resource token-list {
    constructor(tokens: list<token>);

    // mutating methods
    push: func(token: token);
    pop: func() -> token;
    extend: func(tokens: token-list);
    splice: func(start: u32, delete-count: u32, tokens: token-list);

    // non-mutating methods
    length: func() -> u32;
    slice: func(start: u32, end: u32) -> token-list;
    concat: func(cache: token-list) -> token-list;
    index: func(position: u32) -> token;

  }
}