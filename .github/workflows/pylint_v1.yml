name: Lint Python (PR changed files)

on:
  pull_request:
    paths:
      - 'backend/backend-python/config/**/*.py'
      - 'backend/backend-python/model/**/*.py'

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout (full history for reliable diffs)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute changed Python files (PR)
        id: changes
        shell: bash
        run: |
          set -euo pipefail

          PR_NUMBER="${{ github.event.pull_request.number }}"
          BASE_REF="${{ github.event.pull_request.base.ref }}"
          BASE_SHA="${{ github.event.pull_request.base.sha }}"

          # Fetch PR head commit via special ref and the base branch to ensure both sides are present
          git fetch --no-tags --prune --depth=1 origin "pull/${PR_NUMBER}/head:pr_head"
          git fetch --no-tags --prune --depth=1 origin "${BASE_REF}:pr_base"

          # Option A: two-dot diff (base..head) for files changed in the PR
          FILES=$(git diff --name-only --diff-filter=ACMRT pr_base pr_head -- '*.py' \
            | grep -E '^backend/backend-python/(config|model)/.*\.py$' || true)

          # Output as space-separated for easy consumption
          FILES="${FILES//$'\n'/ }"
          echo "files=${FILES}" >> "$GITHUB_OUTPUT"

      - name: Install uv
        run: pipx install uv

      - name: Lint changed files with Black
        shell: bash
        run: |
          FILES="${{ steps.changes.outputs.files }}"
          if [ -z "$FILES" ]; then
            echo "No matching Python files changed."
            exit 0
          fi
          echo "Linting: $FILES"
          uvx black --check $FILES
